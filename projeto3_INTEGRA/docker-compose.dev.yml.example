services:
  nginx:
    depends_on:
      - app
      # - front
    image: nginx:latest
    container_name: pgs.nginx
    tty: true
    ports:
      - "80:80"
    env_file: .env
    volumes:
      - ./nginx/conf.d:/etc/nginx/templates
      - ./app:/var/www/app
    restart: unless-stopped
    networks:
      pgs:
        ipv4_address: "172.16.1.2"
  app:
    depends_on:
      - db
    working_dir: /var/www/app
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: pgs.app
    tty: true
    volumes:
      - ./app:/var/www/app
    restart: unless-stopped
    networks:
      pgs:
        ipv4_address: "172.16.1.10"
    extra_hosts:
      - "auth.eventos:172.16.1.2"
  db:
    image: postgres
    container_name: pgs.db
    tty: true
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - "5437:5432"
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      pgs:
        ipv4_address: "172.16.1.3"
networks:
  pgs:
    driver: bridge
    ipam:
      config:
        - subnet: "172.16.1.0/24"
          gateway: "172.16.1.1"
volumes:
  db:
    driver: local